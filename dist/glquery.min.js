/*
 * glQuery - A fluent WebGL engine (https://github.com/glQuery)
 * glQuery is free, public domain software (http://creativecommons.org/publicdomain/zero/1.0/)
 * Originally created by Rehno Lindeque of http://www.mischievousmeerkat.com
 */"use strict";var glQuery=function(){var a=function(b){return a.fn.init(b)},b={},c=[],d={},e={},f=function(a){console.log(a)},g=function(a){console.log(a)},h=function(a){console.log(a)},i=function(a){console.log(a)},j=function(a,b){console.log("In call to '"+a+"', "+b)},k=function(a,b){return a||i(b),a},l=function(a,b,c,d){return d!=null&&c!=null?k(typeof a===b,"In call to '"+c+"', expected type '"+b+"' for '"+d+"'. Instead, got type '"+typeof a+"'."):c!=null?k(typeof a===b,"In call to '"+c+"', expected type '"+b+"'. Instead, got type '"+typeof a+"'."):d!=null?k(typeof a===b,"Expected type '"+b+"' for '"+d+"'. Instead, got type '"+typeof a+"'."):k(typeof a===b,"Expected type '"+b+"'. Instead, got type '"+typeof a+"'.")},m=function(a,b,c){return c!=null?k(a.length>=b,"In call to '"+c+"', expected at least "+b+" arguments. Instead, got "+a.length+"."):k(a.length>=b,"Expected at least "+b+" arguments. Instead, got "+a.length+".")},n=k,o=0,p=function(){var a="__glq__"+o;return++o,a},q=function(a){if(Array.isArray(a)){var b=[];b.hashes={},b.lastUpdate=0;for(var c=0;c<a.length;++c){var e=q(a[c]);if(Array.isArray(a)){var f={};f[p()]=b,b.push(f)}e!=null?b.push(e):j("scene","could not normalize the node with type '"+typeof a[c]+"'.")}return b}switch(typeof a){case"string":var g=a.split(" ");for(var c=0;c<g.length;++c)typeof d[g[c]]=="undefined"&&(d[g[c]]=[]);return a;case"number":var h=String(a);return typeof d[h]=="undefined"&&(d[h]=[]),h;case"object":var k={};for(var l in a){if(l==="prototype"){i("The given nodes contain a 'prototype' object. ");continue}var m=q(a[l]);if(Array.isArray(m))k[l]=m;else{var n=m!=null?[m]:[];n.hashes={},n.lastUpdate=0,k[l]=n}}return k}};window.requestAnimationFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(a,b){window.setTimeout(a,1e3/60)}}(),window.cancelRequestAnimationFrame=function(){return window.cancelRequestAnimationFrame||window.webkitCancelRequestAnimationFrame||window.mozCancelRequestAnimationFrame||window.oCancelRequestAnimationFrame||window.msCancelRequestAnimationFrame||window.clearTimeout}(),a.DEPTH_BUFFER_BIT=256,a.STENCIL_BUFFER_BIT=1024,a.COLOR_BUFFER_BIT=16384,a.POINTS=0,a.LINES=1,a.LINE_LOOP=2,a.LINE_STRIP=3,a.TRIANGLES=4,a.TRIANGLE_STRIP=5,a.TRIANGLE_FAN=6,a.ZERO=0,a.ONE=1,a.SRC_COLOR=768,a.ONE_MINUS_SRC_COLOR=769,a.SRC_ALPHA=770,a.ONE_MINUS_SRC_ALPHA=771,a.DST_ALPHA=772,a.ONE_MINUS_DST_ALPHA=773,a.DST_COLOR=774,a.ONE_MINUS_DST_COLOR=775,a.SRC_ALPHA_SATURATE=776,a.FUNC_ADD=32774,a.BLEND_EQUATION=32777,a.BLEND_EQUATION_RGB=32777,a.BLEND_EQUATION_ALPHA=34877,a.FUNC_SUBTRACT=32778,a.FUNC_REVERSE_SUBTRACT=32779,a.BLEND_DST_RGB=32968,a.BLEND_SRC_RGB=32969,a.BLEND_DST_ALPHA=32970,a.BLEND_SRC_ALPHA=32971,a.CONSTANT_COLOR=32769,a.ONE_MINUS_CONSTANT_COLOR=32770,a.CONSTANT_ALPHA=32771,a.ONE_MINUS_CONSTANT_ALPHA=32772,a.BLEND_COLOR=32773,a.ARRAY_BUFFER=34962,a.ELEMENT_ARRAY_BUFFER=34963,a.ARRAY_BUFFER_BINDING=34964,a.ELEMENT_ARRAY_BUFFER_BINDING=34965,a.STREAM_DRAW=35040,a.STATIC_DRAW=35044,a.DYNAMIC_DRAW=35048,a.BUFFER_SIZE=34660,a.BUFFER_USAGE=34661,a.CURRENT_VERTEX_ATTRIB=34342,a.FRONT=1028,a.BACK=1029,a.FRONT_AND_BACK=1032,a.CULL_FACE=2884,a.BLEND=3042,a.DITHER=3024,a.STENCIL_TEST=2960,a.DEPTH_TEST=2929,a.SCISSOR_TEST=3089,a.POLYGON_OFFSET_FILL=32823,a.SAMPLE_ALPHA_TO_COVERAGE=32926,a.SAMPLE_COVERAGE=32928,a.NO_ERROR=0,a.INVALID_ENUM=1280,a.INVALID_VALUE=1281,a.INVALID_OPERATION=1282,a.OUT_OF_MEMORY=1285,a.CW=2304,a.CCW=2305,a.LINE_WIDTH=2849,a.ALIASED_POINT_SIZE_RANGE=33901,a.ALIASED_LINE_WIDTH_RANGE=33902,a.CULL_FACE_MODE=2885,a.FRONT_FACE=2886,a.DEPTH_RANGE=2928,a.DEPTH_WRITEMASK=2930,a.DEPTH_CLEAR_VALUE=2931,a.DEPTH_FUNC=2932,a.STENCIL_CLEAR_VALUE=2961,a.STENCIL_FUNC=2962,a.STENCIL_FAIL=2964,a.STENCIL_PASS_DEPTH_FAIL=2965,a.STENCIL_PASS_DEPTH_PASS=2966,a.STENCIL_REF=2967,a.STENCIL_VALUE_MASK=2963,a.STENCIL_WRITEMASK=2968,a.STENCIL_BACK_FUNC=34816,a.STENCIL_BACK_FAIL=34817,a.STENCIL_BACK_PASS_DEPTH_FAIL=34818,a.STENCIL_BACK_PASS_DEPTH_PASS=34819,a.STENCIL_BACK_REF=36003,a.STENCIL_BACK_VALUE_MASK=36004,a.STENCIL_BACK_WRITEMASK=36005,a.VIEWPORT=2978,a.SCISSOR_BOX=3088,a.COLOR_CLEAR_VALUE=3106,a.COLOR_WRITEMASK=3107,a.UNPACK_ALIGNMENT=3317,a.PACK_ALIGNMENT=3333,a.MAX_TEXTURE_SIZE=3379,a.MAX_VIEWPORT_DIMS=3386,a.SUBPIXEL_BITS=3408,a.RED_BITS=3410,a.GREEN_BITS=3411,a.BLUE_BITS=3412,a.ALPHA_BITS=3413,a.DEPTH_BITS=3414,a.STENCIL_BITS=3415,a.POLYGON_OFFSET_UNITS=10752,a.POLYGON_OFFSET_FACTOR=32824,a.TEXTURE_BINDING_2D=32873,a.SAMPLE_BUFFERS=32936,a.SAMPLES=32937,a.SAMPLE_COVERAGE_VALUE=32938,a.SAMPLE_COVERAGE_INVERT=32939,a.NUM_COMPRESSED_TEXTURE_FORMATS=34466,a.COMPRESSED_TEXTURE_FORMATS=34467,a.DONT_CARE=4352,a.FASTEST=4353,a.NICEST=4354,a.GENERATE_MIPMAP_HINT=33170,a.BYTE=5120,a.UNSIGNED_BYTE=5121,a.SHORT=5122,a.UNSIGNED_SHORT=5123,a.INT=5124,a.UNSIGNED_INT=5125,a.FLOAT=5126,a.DEPTH_COMPONENT=6402,a.ALPHA=6406,a.RGB=6407,a.RGBA=6408,a.LUMINANCE=6409,a.LUMINANCE_ALPHA=6410,a.UNSIGNED_SHORT_4_4_4_4=32819,a.UNSIGNED_SHORT_5_5_5_1=32820,a.UNSIGNED_SHORT_5_6_5=33635,a.FRAGMENT_SHADER=35632,a.VERTEX_SHADER=35633,a.MAX_VERTEX_ATTRIBS=34921,a.MAX_VERTEX_UNIFORM_VECTORS=36347,a.MAX_VARYING_VECTORS=36348,a.MAX_COMBINED_TEXTURE_IMAGE_UNITS=35661,a.MAX_VERTEX_TEXTURE_IMAGE_UNITS=35660,a.MAX_TEXTURE_IMAGE_UNITS=34930,a.MAX_FRAGMENT_UNIFORM_VECTORS=36349,a.SHADER_TYPE=35663,a.DELETE_STATUS=35712,a.LINK_STATUS=35714,a.VALIDATE_STATUS=35715,a.ATTACHED_SHADERS=35717,a.ACTIVE_UNIFORMS=35718,a.ACTIVE_ATTRIBUTES=35721,a.SHADING_LANGUAGE_VERSION=35724,a.CURRENT_PROGRAM=35725,a.NEVER=512,a.LESS=513,a.EQUAL=514,a.LEQUAL=515,a.GREATER=516,a.NOTEQUAL=517,a.GEQUAL=518,a.ALWAYS=519,a.KEEP=7680,a.REPLACE=7681,a.INCR=7682,a.DECR=7683,a.INVERT=5386,a.INCR_WRAP=34055,a.DECR_WRAP=34056,a.VENDOR=7936,a.RENDERER=7937,a.VERSION=7938,a.NEAREST=9728,a.LINEAR=9729,a.NEAREST_MIPMAP_NEAREST=9984,a.LINEAR_MIPMAP_NEAREST=9985,a.NEAREST_MIPMAP_LINEAR=9986,a.LINEAR_MIPMAP_LINEAR=9987,a.TEXTURE_MAG_FILTER=10240,a.TEXTURE_MIN_FILTER=10241,a.TEXTURE_WRAP_S=10242,a.TEXTURE_WRAP_T=10243,a.TEXTURE_2D=3553,a.TEXTURE=5890,a.TEXTURE_CUBE_MAP=34067,a.TEXTURE_BINDING_CUBE_MAP=34068,a.TEXTURE_CUBE_MAP_POSITIVE_X=34069,a.TEXTURE_CUBE_MAP_NEGATIVE_X=34070,a.TEXTURE_CUBE_MAP_POSITIVE_Y=34071,a.TEXTURE_CUBE_MAP_NEGATIVE_Y=34072,a.TEXTURE_CUBE_MAP_POSITIVE_Z=34073,a.TEXTURE_CUBE_MAP_NEGATIVE_Z=34074,a.MAX_CUBE_MAP_TEXTURE_SIZE=34076,a.TEXTURE0=33984,a.TEXTURE1=33985,a.TEXTURE2=33986,a.TEXTURE3=33987,a.TEXTURE4=33988,a.TEXTURE5=33989,a.TEXTURE6=33990,a.TEXTURE7=33991,a.TEXTURE8=33992,a.TEXTURE9=33993,a.TEXTURE10=33994,a.TEXTURE11=33995,a.TEXTURE12=33996,a.TEXTURE13=33997,a.TEXTURE14=33998,a.TEXTURE15=33999,a.TEXTURE16=34e3,a.TEXTURE17=34001,a.TEXTURE18=34002,a.TEXTURE19=34003,a.TEXTURE20=34004,a.TEXTURE21=34005,a.TEXTURE22=34006,a.TEXTURE23=34007,a.TEXTURE24=34008,a.TEXTURE25=34009,a.TEXTURE26=34010,a.TEXTURE27=34011,a.TEXTURE28=34012,a.TEXTURE29=34013,a.TEXTURE30=34014,a.TEXTURE31=34015,a.ACTIVE_TEXTURE=34016,a.REPEAT=10497,a.CLAMP_TO_EDGE=33071,a.MIRRORED_REPEAT=33648,a.FLOAT_VEC2=35664,a.FLOAT_VEC3=35665,a.FLOAT_VEC4=35666,a.INT_VEC2=35667,a.INT_VEC3=35668,a.INT_VEC4=35669,a.BOOL=35670,a.BOOL_VEC2=35671,a.BOOL_VEC3=35672,a.BOOL_VEC4=35673,a.FLOAT_MAT2=35674,a.FLOAT_MAT3=35675,a.FLOAT_MAT4=35676,a.SAMPLER_2D=35678,a.SAMPLER_CUBE=35680,a.VERTEX_ATTRIB_ARRAY_ENABLED=34338,a.VERTEX_ATTRIB_ARRAY_SIZE=34339,a.VERTEX_ATTRIB_ARRAY_STRIDE=34340,a.VERTEX_ATTRIB_ARRAY_TYPE=34341,a.VERTEX_ATTRIB_ARRAY_NORMALIZED=34922,a.VERTEX_ATTRIB_ARRAY_POINTER=34373,a.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING=34975,a.COMPILE_STATUS=35713,a.LOW_FLOAT=36336,a.MEDIUM_FLOAT=36337,a.HIGH_FLOAT=36338,a.LOW_INT=36339,a.MEDIUM_INT=36340,a.HIGH_INT=36341,a.FRAMEBUFFER=36160,a.RENDERBUFFER=36161,a.RGBA4=32854,a.RGB5_A1=32855,a.RGB565=36194,a.DEPTH_COMPONENT16=33189,a.STENCIL_INDEX=6401,a.STENCIL_INDEX8=36168,a.DEPTH_STENCIL=34041,a.RENDERBUFFER_WIDTH=36162,a.RENDERBUFFER_HEIGHT=36163,a.RENDERBUFFER_INTERNAL_FORMAT=36164,a.RENDERBUFFER_RED_SIZE=36176,a.RENDERBUFFER_GREEN_SIZE=36177,a.RENDERBUFFER_BLUE_SIZE=36178,a.RENDERBUFFER_ALPHA_SIZE=36179,a.RENDERBUFFER_DEPTH_SIZE=36180,a.RENDERBUFFER_STENCIL_SIZE=36181,a.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE=36048,a.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME=36049,a.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL=36050,a.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE=36051,a.COLOR_ATTACHMENT0=36064,a.DEPTH_ATTACHMENT=36096,a.STENCIL_ATTACHMENT=36128,a.DEPTH_STENCIL_ATTACHMENT=33306,a.NONE=0,a.FRAMEBUFFER_COMPLETE=36053,a.FRAMEBUFFER_INCOMPLETE_ATTACHMENT=36054,a.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT=36055,a.FRAMEBUFFER_INCOMPLETE_DIMENSIONS=36057,a.FRAMEBUFFER_UNSUPPORTED=36061,a.FRAMEBUFFER_BINDING=36006,a.RENDERBUFFER_BINDING=36007,a.MAX_RENDERBUFFER_SIZE=34024,a.INVALID_FRAMEBUFFER_OPERATION=1286,a.UNPACK_FLIP_Y_WEBGL=37440,a.UNPACK_PREMULTIPLY_ALPHA_WEBGL=37441,a.CONTEXT_LOST_WEBGL=37442,a.UNPACK_COLORSPACE_CONVERSION_WEBGL=37443,a.BROWSER_DEFAULT_WEBGL=37444;var r=function(a,b,c){for(var e=0;e<a.length;++e){var f=d[a[e]];if(typeof f=="undefined")continue;b.splice.apply(b,[b.length,0].concat(f));var g=f[u.shaderProgram];g!=null&&(c[0]=g)}},s=function(a,b,c){var d=function(a){return a[0].join("$")};n(a.hashes!=null&&typeof a.lastUpdate!="undefined","Node properties are not properly initialized.");if(a.lastUpdate>0){a.lastUpdate=2;return}a.hashes={},typeof b=="undefined"&&(b=[]),typeof c=="undefined"&&(c=[[]]);for(var e=0;e<a.length;++e)if(typeof a[e]=="string"){var f=[],g=c.slice(0);r(a[e].split(" "),f,g);var h=d(g),i=a.hashes[h];typeof i=="undefined"&&(i=a.hashes[h]=[]),i.push(b.concat(f))}else for(var j in a[e]){var f=[],g=c.slice(0);r(a[e].split(" "),f,g);var k=a[e][j];f=b.concat(f),s(k,f,g);for(var h in k.hashes){var i=a.hashes[h];typeof i=="undefined"?a.hashes[h]=k.hashes[h]:a.hashes[h]=i.concat(k.hashes[h])}}a.lastUpdate=1},t=function(a){if(typeof b[a]=="undefined")return;var c=[],d=[[]];r(a.split(" "),c,d),s(b[a],c,d)},u={insert:0,remove:1,shaderProgram:2,geometry:3,vertexAttribBuffer:4,vertexAttrib1:5,vertexAttrib2:6,vertexAttrib3:7,vertexAttrib4:8,vertices:9,normals:10,indices:11,material:12,light:13},v=[function(a,b){f("dispatch command: insert")},function(a,b){f("dispatch command: remove")},function(a,b){f("dispatch command: shaderProgram");if(b.length>0)for(var c=0;c<a.length;++c){var e=typeof d[a[c]]=="undefined"?d[a[c]]={}:d[a[c]];e[u.shaderProgram]=b}else for(var c=0;c<a.length;++c)typeof d[a[c]]!="undefined"&&delete d[a[c]][u.shaderProgram]},function(a,b){f("dispatch command: geometry");if(b.length>0)for(var c=0;c<a.length;++c){var e=typeof d[a[c]]=="undefined"?d[a[c]]={}:d[a[c]];e[u.geometry]=b[0]}else for(var c=0;c<a.length;++c)typeof d[a[c]]!="undefined"&&delete d[a[c]][u.geometry]},function(a,b){f("dispatch command: vertexAttribBuffer");if(b.length>1)for(var c=0;c<a.length;++c){var e=typeof d[a[c]]=="undefined"?d[a[c]]={}:d[a[c]];e[u.vertexAttribute]=b}else for(var c=0;c<a.length;++c)typeof d[a[c]]!="undefined"&&delete d[a[c]][u.vertexAttribute]},function(a,b){f("dispatch command: vertexAttrib1")},function(a,b){f("dispatch command: vertexAttrib2")},function(a,b){f("dispatch command: vertexAttrib3")},function(a,b){f("dispatch command: vertexAttrib4")},function(a,b){f("dispatch command: vertices")},function(a,b){f("dispatch command: normals")},function(a,b){f("dispatch command: indices")},function(a,b){f("dispatch command: material")},function(a,b){f("dispatch command: light")}];k(v.length==u.light+1,"Internal Error: Number of commands in commandDispatch is incorrect.");var w=function(a,b,c){v[a](b,c)};a.command=function(){return m(arguments,1,"command")?k(u[arguments[0]]!=null,"Unknown command '"+u[arguments[0]]+"' used.")?(c.push(u[arguments[0]],u[arguments[1]]!=null?u[arguments[1]]:null,Array.prototype.slice.call(arguments,2)),a):a:a},a.fn=a.prototype={init:function(){return this._selector=Array.prototype.slice.call(arguments),this},render:function(a){return l(a,"object","render","context")?this:this},command:function(){return m(arguments,1,"command")?k(u[arguments[0]]!=null,"Unknown command '"+u[arguments[0]]+"' used.")?(c.push(u[arguments[0]],this._selector,Array.prototype.slice.call(arguments,1)),this):this:this},shaderProgram:function(){return f("shaderProgram"),c.push(u.shaderProgram,this._selector,Array.prototype.slice.call(arguments)),this},triangles:function(){return f("triangles"),c.push(u.geometry,this._selector,[a.TRIANGLES]),this},vertexAttrib:function(){return f("vertexAttrib"),c.push(u.vertexAttribBuffer,this._selector,Array.prototype.slice.call(arguments)),this},indices:function(){return f("indices"),c.push(u.indices,this._selector,Array.prototype.slice.call(arguments)),this},vertices:function(){return f("vertices"),c.push(u.vertices,this._selector,Array.prototype.slice.call(arguments)),this},material:function(){return f("material"),c.push(u.material,this._selector,Array.prototype.slice.call(arguments)),this},light:function(){return f("light"),c.push(u.light,this._selector,Array.prototype.slice.call(arguments)),this}};var x={};for(var y in a.fn)x[y]=function(){return this};return a.canvas=function(b,c,d,e){var h,i;f("canvas");var j={start:function(){return this},clear:function(){return this},clearColor:function(){return this},clearDepth:function(){return this},clearStencil:function(){return this}};if(typeof b=="undefined")h="glqueryCanvas",document.write("<canvas id='"+h+"' width='"+(d!=null?d:800)+"' height='"+(e!=null?e:800)+"'></canvas>"),i=document.getElementById(h);else{if(!k(typeof b=="string"||typeof b=="object"&&b.nodeName!=="CANVAS","In call to 'canvas', expected type 'string', 'undefined' or 'canvas element' for 'htmlCanvas'. Instead, got type '"+typeof b+"'."))return j;h=typeof b=="string"?b:b.id,i=typeof b=="object"?b:document.getElementById(h)}if(!k(i!=null&&typeof i=="object"&&i.nodeName==="CANVAS","In call to 'canvas', could not initialize canvas element."))return j;h!=null?g("Initialized canvas: "+h):g("Initialized canvas");var m=i.getContext("experimental-webgl",c);return k(m!=null,"Could not get a 'experimental-webgl' context.")?function(){var b={ctx:m,rootId:null,nextFrame:null,clearMask:a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT,callback:function(){return b=this,function c(){b.ctx.clear(b.clearMask),a(b.rootId).render(b.ctx),b.nextFrame=window.requestAnimationFrame(c,b.ctx.canvas)}}};return{start:function(a){f("canvas.start");if(a!=null){if(!l(a,"string","canvas.start","rootId"))return this;b.rootId=a,b.nextFrame=window.requestAnimationFrame(b.callback(),b.ctx.canvas)}return this},clear:function(a){return f("canvas.clear"),b.clearMask=a,this},clearColor:function(a,c,d,e){return f("canvas.clearColor"),b.ctx.clearColor(a,c,d,e),this},clearDepth:function(a){return f("canvas.clearDepth"),b.ctx.clearDepth(a),this},clearStencil:function(a){return f("canvas.clearStencil"),b.ctx.clearStencil(a),this}}}():j},a.scene=function(){f("scene");var c=[];for(var d=0;d<arguments.length;++d){var e=arguments[d];if(Array.isArray(e)){var g=p();b[g]=q(e),c.push(g);continue}switch(typeof e){case"string":b[e]=[],c.push(e);continue;case"number":var g=String(e);b[g]=[],c.push(g);continue;default:if(!k(typeof e=="object","In call to 'scene', expected type 'string' ,'number' or 'object' for 'sceneDef'. Instead, got type '"+typeof e+"'."))continue;var h=q(e);if(h!=null)for(y in h)c.push(y),b[y]=h[y]}}if(arguments.length===0)return b={},x;if(c.length===0)return j("could not create scene from the given scene definition."),x;for(var d=0;d<c.length;++d)t(c[d]);return a.fn.init(c)},a.shader=function(b,c){f("shader");if(typeof c==null)delete e[b];else{if(!l(c,"string","shader","code"))return a;e[b]=c}return a},a.worker=function(a,b){i("(TODO) Workers are not yet implemented...")},a}();